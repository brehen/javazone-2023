[target.'cfg(all(target_arch = "arm", target_os = "none"))']
runner = "probe-run --chip nrf52833_xxAA"
rustflags = [
  "-C", "linker=flip-link",
  "-C", "link-arg=-Tlink.x",
  "-C", "link-arg=-Tdefmt.x",
  # This is needed if your flash or ram addresses are not aligned to 0x10000 in memory.x
  # See https://github.com/rust-embedded/cortex-m-quickstart/pull/95
  "-C", "link-arg=--nmagic",
]

[env]
# Set env var that points to a specific microbit for communcation:
# ${id}:${some_other_id}:${serial}
# To be used when you have multiple probes. If only one, you can comment out
# this
# PROBE_RUN_PROBE = { value = "0d28:0204:9905360200052833299efa62e314d624000000006e052820", force = true}
#PROBE_RUN_PROBE = { value = "0d28:0204:99053602000528331d75d1e34e2a04dc000000006e052820", force = true}

[build]
# TODO(3) Adjust the compilation target.
# (`thumbv6m-*` is compatible with all ARM Cortex-M chips but using the right
# target improves performance)
#target = "thumbv6m-none-eabi"    # Cortex-M0 and Cortex-M0+
# target = "thumbv7m-none-eabi"    # Cortex-M3
# target = "thumbv7em-none-eabi"   # Cortex-M4 and Cortex-M7 (no FPU)
target = "thumbv7em-none-eabihf" # Cortex-M4F and Cortex-M7F (with FPU)

[alias]
rb = "run --bin"
rrb = "run --release --bin"

